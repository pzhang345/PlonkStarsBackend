"""empty message

Revision ID: 9e4b13f85313
Revises: 5a7881f6ce16
Create Date: 2025-05-19 18:14:27.290305

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9e4b13f85313'
down_revision = '5a7881f6ce16'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('bounds', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['start_latitude', 'start_longitude', 'end_latitude', 'end_longitude'])

    with op.batch_alter_table('cosmetics_ownership', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['user_id', 'cosmetics_id'])

    with op.batch_alter_table('crate_items', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['crate_id', 'tier'])

    with op.batch_alter_table('daily_challenge', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['session_id'])

    with op.batch_alter_table('duel_hp', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['state_id', 'team_id'])

    with op.batch_alter_table('duel_state', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['round_id'])

    with op.batch_alter_table('duels_rules', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['session_id'])

    with op.batch_alter_table('generationtimes', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['map_id'])

    with op.batch_alter_table('guesses', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['user_id', 'round_id'])

    with op.batch_alter_table('mapbounds', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['bound_id', 'map_id'])

    with op.batch_alter_table('mapeditors', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['user_id', 'map_id'])

    with op.batch_alter_table('mapstats', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['map_id', 'nmpz'])

    with op.batch_alter_table('party_members', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['party_id', 'user_id'])

    with op.batch_alter_table('party_rules', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['party_id'])

    with op.batch_alter_table('players', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['user_id', 'session_id'])

    with op.batch_alter_table('rounds', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['session_id', 'round_number'])

    with op.batch_alter_table('roundstats', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['user_id', 'session_id', 'round'])

    with op.batch_alter_table('svlocations', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['latitude', 'longitude'])

    with op.batch_alter_table('team_players', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['team_id', 'user_id'])

    with op.batch_alter_table('user_coins', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['user_id'])

    with op.batch_alter_table('user_cosmetics', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['user_id'])

    with op.batch_alter_table('usermapstats', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['user_id', 'map_id', 'nmpz'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('usermapstats', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('user_cosmetics', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('user_coins', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('team_players', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('svlocations', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('roundstats', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('rounds', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('players', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('party_rules', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('party_members', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('mapstats', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('mapeditors', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('mapbounds', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('guesses', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('generationtimes', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('duels_rules', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('duel_state', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('duel_hp', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('daily_challenge', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('crate_items', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('cosmetics_ownership', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('bounds', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    # ### end Alembic commands ###
